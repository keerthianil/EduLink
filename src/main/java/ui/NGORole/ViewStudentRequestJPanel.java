/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.NGORole;

import Business.EcoSystem;
import Business.WorkQueue.WorkRequest;
import Business.Role.StudentRole;
import Business.UserAccount.UserAccount;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import java.awt.*;
import java.util.ArrayList;

/**
 *
 * @author harshithachennareddy
 */
public class ViewStudentRequestJPanel extends javax.swing.JPanel {
    
    private JPanel userProcessContainer;
    private EcoSystem system;

    /**
     * Creates new form ViewStudentRequestJPanel
     */
    public ViewStudentRequestJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.system = system;
        populateRequestTable();
    }

private void populateRequestTable() {
    DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
    model.setRowCount(0);

    // Iterate over all user accounts in the system
    for (UserAccount userAccount : system.getUserAccountDirectory().getUserAccountList()) {
        // Check if the user is a Student
        if (userAccount.getRole() instanceof StudentRole) {
            // Iterate over their WorkQueue
            for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
                // Add request to the table
                Object[] row = new Object[8];
                row[0] = request.getId();           // Request ID
                row[1] = request.getType();         // Request Type
                row[2] = request.getDescription();  // Description
                row[3] = request.getLocation();     // Location
                row[4] = request.getRequestDate();  // Request Date
                row[5] = request.getStatus();       // Status
                row[6] = false;                     // Approve checkbox
                row[7] = false;                     // Reject checkbox
                model.addRow(row);
            }
        }
    }

    // Add JComboBox or JCheckBox for status updates
    TableColumn approveColumn = jTable2.getColumnModel().getColumn(6);
    approveColumn.setCellEditor(new DefaultCellEditor(new JCheckBox()));

    TableColumn rejectColumn = jTable2.getColumnModel().getColumn(7);
    rejectColumn.setCellEditor(new DefaultCellEditor(new JCheckBox()));
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        SaveBtn = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();

        jRadioButton1.setText("jRadioButton1");

        setBackground(new java.awt.Color(204, 227, 222));

        jTable2.setBackground(new java.awt.Color(246, 255, 248));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request ID", "Request Type", "Description", "Location", "Request Date", "Status", "Approve", "Reject"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabel1.setFont(new java.awt.Font("Sathu", 0, 13)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("View Student Request");

        SaveBtn.setBackground(new java.awt.Color(246, 255, 248));
        SaveBtn.setText("Save");
        SaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveBtnActionPerformed(evt);
            }
        });

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(300, 300, 300))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 777, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backJButton)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(SaveBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(backJButton)
                .addGap(90, 90, 90))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        NGOWorkAreaJPanel ngowjp = (NGOWorkAreaJPanel) component;

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void SaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        boolean atLeastOneSelected = false;
    
        for (int i = 0; i < model.getRowCount(); i++) {
            boolean isApproved = (Boolean) model.getValueAt(i, 6); // Approved column
            boolean isRejected = (Boolean) model.getValueAt(i, 7); // Rejected column
    
            // Validation: A request cannot be both approved and rejected
            if (isApproved && isRejected) {
                JOptionPane.showMessageDialog(this, "A request cannot be both approved and rejected. Please correct it.", "Validation Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
    
            // Check if either Approved or Rejected is selected
            if (isApproved || isRejected) {
                atLeastOneSelected = true;
    
                // Get the Request ID from the table
                Object requestIdObj = model.getValueAt(i, 0); // ID column
                if (requestIdObj == null || !(requestIdObj instanceof Integer)) {
                    JOptionPane.showMessageDialog(this, "Invalid Request ID in the table.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
    
                int requestId = (int) requestIdObj;
    
                // Fetch the WorkRequest using the ID
                WorkRequest request = system.getWorkQueue().getWorkRequestById(requestId);
    
                if (request == null) {
                    JOptionPane.showMessageDialog(this, "Request not found for ID: " + requestId, "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
    
                // Update the WorkRequest status
                if (isApproved) {
                    request.setStatus("In Progress");
                } else if (isRejected) {
                    request.setStatus("Rejected");
                }
            }
        }
    
        // Validation: Ensure at least one request is updated
        if (!atLeastOneSelected) {
            JOptionPane.showMessageDialog(this, "Please approve or reject at least one request before saving.", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    
        // Success message
        JOptionPane.showMessageDialog(this, "Changes saved successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
    
        // Refresh the table to show updated statuses
        populateRequestTable();
    }//GEN-LAST:event_SaveBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SaveBtn;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
