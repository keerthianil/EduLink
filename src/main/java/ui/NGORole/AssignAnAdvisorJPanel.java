/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.NGORole;

import Business.EcoSystem;
import Business.Role.AdvisorRole;
import Business.Role.StudentRole;
import Business.UserAccount.UserAccount;

import javax.swing.*;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

/**
 *
 * @author harshithachennareddy
 */
public class AssignAnAdvisorJPanel extends javax.swing.JPanel {
    private EcoSystem system;
    private JPanel userProcessContainer;

    

    /**
     * Creates new form AssignAnAdvisorJPanel
     */
    public AssignAnAdvisorJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.system = system;
        this.userProcessContainer = userProcessContainer;

        populateComboBoxes();
    }

    private void populateComboBoxes() {
        StudentListCombobox.removeAllItems();
        TeacherListComboBox.removeAllItems();

        // Populate students without advisors
        for (UserAccount userAccount : system.getUserAccountDirectory().getUserAccountList()) 
        { 
            // print all the students without advisors
            
            if (userAccount.getRole() instanceof StudentRole && userAccount.getAssignedAdvisor() == null) {
                StudentListCombobox.addItem(userAccount);
            }
        }

        // Populate available advisors
        for (UserAccount userAccount : system.getUserAccountDirectory().getUserAccountList()) {
            if (userAccount.getRole() instanceof AdvisorRole) {
                TeacherListComboBox.addItem(userAccount);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        StudentListCombobox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        TeacherListComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        AssignAdvisorBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 227, 222));

        StudentListCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setFont(new java.awt.Font("Sathu", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Assign an Advisor");

        TeacherListComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Students Without Advisors");

        jLabel3.setText("Advisors");

        AssignAdvisorBtn.setText("Assign An Advisor");
        AssignAdvisorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AssignAdvisorBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(245, 245, 245)
                        .addComponent(AssignAdvisorBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TeacherListComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(StudentListCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(285, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(StudentListCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(TeacherListComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(50, 50, 50)
                .addComponent(AssignAdvisorBtn)
                .addContainerGap(157, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void AssignAdvisorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AssignAdvisorBtnActionPerformed

        UserAccount selectedStudent = (UserAccount) StudentListCombobox.getSelectedItem();
        UserAccount selectedAdvisor = (UserAccount) TeacherListComboBox.getSelectedItem();
    
        // Validation to ensure selections are made
        if (selectedStudent == null || selectedAdvisor == null) {
            JOptionPane.showMessageDialog(this, "Please select both a student and an advisor.", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    
        // Assign the advisor to the student
        selectedStudent.setAssignedAdvisor(selectedAdvisor);
    
        // Notify the user about successful assignment
        JOptionPane.showMessageDialog(this, "Advisor " + selectedAdvisor.getUsername() + " successfully assigned to " + selectedStudent.getUsername() + ".", "Success", JOptionPane.INFORMATION_MESSAGE);
    
        // Refresh the combo boxes to reflect updated data
        populateComboBoxes();
        
    }//GEN-LAST:event_AssignAdvisorBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AssignAdvisorBtn;
    private javax.swing.JComboBox<String> StudentListCombobox;
    private javax.swing.JComboBox<String> TeacherListComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
